# rTorrent-PS systemd unit (with dedicated tmux, as a user service)
#
# Save to:
#   ~/.config/systemd/user/rtps.service
#
# Exec as *root*:
#   loginctl enable-linger rtorrent
#
# Exec as *rtorrent*:
#   systemctl --user start rtps
#   systemctl --user status rtps
#   journalctl -xe --user-unit=rtps
#
# To start at boot (exec as *rtorrent*):
#   systemctl --user enable rtps
#
# Attach to tmux:
#   tmux -2u -L rtps-$USER attach
#
# Trouble-shooting:
#
#   a) Do a manual start like so:
#
#      tmux -2u -L test new-session -s test -n rT-PS bash -c "$HOME/rtorrent/start ; exec $SHELL"
#
#   b) Add "-vv" to the tmux call in ExecStart
#      (writes tmux log files to "~/rtorrent")

[Unit]
Description=rTorrent-PS in tmux
Documentation=https://rtorrent-ps.readthedocs.io/
Documentation=https://rtorrent-docs.readthedocs.io/
Documentation=https://pimp-my-box.readthedocs.io/
Documentation=https://pyrocore.readthedocs.io/
After=network.target

[Service]
Type=forking
Environment="TERM=xterm-256color"
WorkingDirectory=%h/rtorrent
ExecStartPre=/bin/bash -c "if test -e %h/rtorrent/.session/rtorrent.lock && ! ( test -S %h/rtorrent/.scgi_local && lsof %h/rtorrent/.scgi_local >/dev/null ); then rm -f %h/rtorrent/.session/rtorrent.lock; fi"
ExecStart=/usr/bin/tmux -2u -L rtps-%u new-session -s rtps-%u -n rT-PS -d %h/rtorrent/start
ExecStop=/bin/bash -c "/bin/kill -INT `pgrep -u %u rtorrent` 2>/dev/null || : ; for i in `seq 180 -1 1`; do if pgrep -u %u rtorrent >/dev/null; then echo Stopping rtorrent... [$i]; sleep 1; else break; fi; done"
Restart=on-failure

[Install]
WantedBy=default.target
