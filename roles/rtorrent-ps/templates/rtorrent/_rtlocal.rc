# Local settings include file
#
# This is installed by Ansible, but gets never overwritten,
# unless you do so in a custom playbook.
#
# Add anything of your own here...

# Throttles
throttle.up = kb500, 500
throttle.up = onemb, 1024
throttle.up = lo_up, 2048
# throttle.ip = lo_up, some.domain.name
# or rtxmlrpc throttle.ip=,lo_up,some.domain.name

# Set your own session name
## session.name.set = "$cat=MY_ID,:,$system.pid="

# Stupid ^Q be gone!
method.insert = quit, simple, "execute=kill,-INT,$system.pid="
method.insert = q, simple|private, quit=
method.insert = print_noquit, simple|private, "print=\"^Q is disabled, use '^X quit='\""
branch=pyro.extended=,"schedule = bind_no_quit,0,0,\"ui.bind_key=download_list,^q,print_noquit=\""

# VIEWs
schedule = bind_hashing,0,0,"ui.bind_key=download_list,#,ui.current_view.set=hashing"
##schedule = bind_active,0,0,"ui.bind_key=download_list,0,ui.current_view.set=active"

# UI: Collapsed view defaults
branch=pyro.extended=,"view.collapsed.toggle=main"
branch=pyro.extended=,"view.collapsed.toggle=name"
branch=pyro.extended=,"view.collapsed.toggle=stopped"
branch=pyro.extended=,"view.collapsed.toggle=incomplete"
branch=pyro.extended=,"view.collapsed.toggle=active"
branch=pyro.extended=,"view.collapsed.toggle=rtcontrol"

# UI: Add day break to log
schedule = log_new_day,00:00:00,24:00:00,"print=\"New day \",$to_date=$system.time="

# UI: Show traffic of the last hour
network.history.depth.set = 112
schedule = network_history_sampling,1,32, network.history.sample=
method.insert = network.history.auto_scale.toggle, simple|private, "branch=network.history.auto_scale=,\"network.history.auto_scale.set=0\",\"network.history.auto_scale.set=1\""
method.insert = network.history.auto_scale.ui_toggle, simple|private, "network.history.auto_scale.toggle= ;network.history.refresh="
branch=pyro.extended=,"schedule = bind_auto_scale,0,0,\"ui.bind_key=download_list,=,network.history.auto_scale.ui_toggle=\""

# NETWORK: Unwanted peers
##ipv4_filter.add_address = 1.2.3.666, unwanted

# Logging:
#   Levels = critical error warn notice info debug
#   Groups = connection_* dht_* peer_* rpc_* storage_* thread_* tracker_* torrent_*
method.insert = log.filename, string|const|simple|private,"cat=/var/torrent/log/rtorrent-,\"$system.time=\",\".log\""
print=(cat,"Logging to ",(log.filename))
log.open_file = "log", (log.filename)
log.add_output = "info", "log"
##log.add_output = "tracker_debug", "log"
