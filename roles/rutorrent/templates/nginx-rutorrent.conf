# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# ! FILE IS CONTROLLED BY ANSIBLE, DO NOT CHANGE, OR ELSE YOUR CHANGES WILL BE EVENTUALLY LOST !
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files so you can fully unleash the power of Nginx.
#
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.

#
# Backends
#
upstream backendrutorrent {
    server unix:/var/run/php-fpm-rutorrent.sock;
}
upstream backendrtorrent {
    server unix:/var/torrent/.scgi_local;
}

#
# HTTPS server (other ports than 443 are not open anyway)
#
server {
    listen              443 default_server;
    listen              [::]:443 default_server ipv6only=on;
    server_name         {{ nginx_server_name }};
    server_tokens       off;

    root                /usr/share/nginx/htdocs;
    index               index.html;

    # Master for these settings:
    #   https://mozilla.github.io/server-side-tls/ssl-config-generator/
    #   ?server=nginx-1.4.6&openssl=1.0.1f&hsts=yes&profile=modern

    # Certs sent to the client in "SERVER HELLO" are concatenated in `ssl_certificate`.
    ssl                 on;
    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/cert.key;
    ssl_session_timeout 1d;
    ssl_session_cache   shared:SSL:50m;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits.
    ssl_dhparam         /etc/nginx/ssl/dhparam.pem;

    # Modern configuration. Tweak to your needs.
    ssl_protocols       TLSv1.1 TLSv1.2;
    ssl_ciphers         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
    ssl_prefer_server_ciphers on;

    # HSTS (`ngx_http_headers_module` is required; 15768000 seconds = 6 months)
    add_header          Strict-Transport-Security max-age=15768000;

    ### OCSP Stapling - fetch OCSP records from URL in ssl_certificate and cache them.
    ##ssl_stapling        on;
    ##ssl_stapling_verify on;

    # Verify chain of trust of OCSP response using Root CA and intermediate certs.
    ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
    }

    # Redirect server error pages to static page.
    error_page 500 502 503 504 /50x.html;
    ##error_page 404 /404.html;

    # Deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one.
    location ~ /\.ht {
        deny all;
    }

    location /rutorrent {
        access_log              /var/log/nginx/rutorrent.access.log;
        error_log               /var/log/nginx/rutorrent.error.log;

        auth_basic              "Knock knock, who's there?";
        auth_basic_user_file    /etc/nginx/rutorrent.htpasswd;

        location ~ .php$ {
            # Filter out arbitrary code execution.
            location ~ \..*/.*\.php$ { return 404; }

            # http://blog.martinfjordvald.com/2011/01/no-input-file-specified-with-php-and-nginx/
            fastcgi_split_path_info         ^(.+\.php)(.*)$;
            fastcgi_param                   SCRIPT_FILENAME $request_filename;
            include                         fastcgi_params;

            fastcgi_pass                    backendrutorrent;
            fastcgi_intercept_errors        on;
            fastcgi_ignore_client_abort     off;
            fastcgi_connect_timeout         60;
            fastcgi_send_timeout            180;
            fastcgi_read_timeout            180;
            fastcgi_buffer_size             128k;
            fastcgi_buffers                 4 256k;
            fastcgi_busy_buffers_size       256k;
            fastcgi_temp_file_write_size    256k;
        }
    }

    location /RPC2 {
        access_log  /var/log/nginx/rutorrent.rpc2.access.log;
        error_log   /var/log/nginx/rutorrent.rpc2.error.log;

        auth_basic              "Knock knock, who's there?";
        auth_basic_user_file    /etc/nginx/rutorrent.htpasswd;

        include     /etc/nginx/scgi_params;
        scgi_pass   backendrtorrent;
    }
}
